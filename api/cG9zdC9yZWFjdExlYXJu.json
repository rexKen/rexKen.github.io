{"title":"React组件生命周期","date":"2019-02-13T06:20:45.000Z","slug":"reactLearn","tags":["React"],"updated":"2019-04-25T11:07:11.000Z","content":"<h1 id=\"React组件生命周期\"><a href=\"#React组件生命周期\" class=\"headerlink\" title=\"React组件生命周期\"></a>React组件生命周期</h1><div class=\"article-img\"><p><img src=\"/images/react/reactLife.png\" alt=\"\"></p></div>\n<p>​    如图，React生命周期（lifecycle)主要分为三个阶段：初始化阶段、运行阶段和销毁阶段。其中生命周期钩子函数可以将其分为两大类：挂载、更新、卸载前，关键词Will，挂载、更新后，关键词Did。其中我们要注意一下并没有卸载后的钩子函数。组件更新的的两个钩子函数在开发中比较常用。父组件state更新会执行componentWillReceiveProps()。这个时候要在钩子函数中重新setState()用以更新改变得props，shouldComponent()可以控制组件是否对应更新，是React应用中的优化点。</p>\n<h2 id=\"初始化阶段\"><a href=\"#初始化阶段\" class=\"headerlink\" title=\"初始化阶段\"></a>初始化阶段</h2><h4 id=\"1-设置组件的默认属性\"><a href=\"#1-设置组件的默认属性\" class=\"headerlink\" title=\"1. 设置组件的默认属性\"></a>1. 设置组件的默认属性</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">static</span> defaultProps = &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'sls'</span>,</span><br><span class=\"line\">    age:<span class=\"number\">23</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">//or</span></span><br><span class=\"line\">Counter.defaltProps=&#123;<span class=\"attr\">name</span>:<span class=\"string\">'sls'</span>&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-设置组件的初始化状态\"><a href=\"#2-设置组件的初始化状态\" class=\"headerlink\" title=\"2. 设置组件的初始化状态\"></a>2. 设置组件的初始化状态</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>();</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.state = &#123;<span class=\"attr\">number</span>: <span class=\"number\">0</span>&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-componentWillMount\"><a href=\"#3-componentWillMount\" class=\"headerlink\" title=\"3. componentWillMount()\"></a>3. componentWillMount()</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">组件即将被渲染到页面之前触发，此时可以进行开启定时器、向服务器发送请求等操作</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-render\"><a href=\"#4-render\" class=\"headerlink\" title=\"4. render()\"></a>4. render()</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">组件渲染</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-componentDidMount\"><a href=\"#5-componentDidMount\" class=\"headerlink\" title=\"5. componentDidMount()\"></a>5. componentDidMount()</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">组件已经被渲染到页面中后触发：此时页面中有了真正的DOM的元素，可以进行DOM相关的操作。</span><br></pre></td></tr></table></figure>\n<h2 id=\"运行中阶段\"><a href=\"#运行中阶段\" class=\"headerlink\" title=\"运行中阶段\"></a>运行中阶段</h2><h4 id=\"1-componentWillReceiveProps\"><a href=\"#1-componentWillReceiveProps\" class=\"headerlink\" title=\"1. componentWillReceiveProps()\"></a>1. componentWillReceiveProps()</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">组件接收到属性时触发，state更新，同步传到子组件的props</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-shouldComponentUpdate\"><a href=\"#2-shouldComponentUpdate\" class=\"headerlink\" title=\"2. shouldComponentUpdate()\"></a>2. shouldComponentUpdate()</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">当组件接收到新属性，或者组件的状态state发生改变时触发。组件首次渲染时并不会触发</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-componentWillUpdate\"><a href=\"#3-componentWillUpdate\" class=\"headerlink\" title=\"3. componentWillUpdate()\"></a>3. componentWillUpdate()</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">组件即将被更新时触发</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-componentDidUpdate\"><a href=\"#4-componentDidUpdate\" class=\"headerlink\" title=\"4. componentDidUpdate()\"></a>4. componentDidUpdate()</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">组件被更新完成后触发。页面中产生了新的DOM的元素，可以进行DOM操作</span><br></pre></td></tr></table></figure>\n<h2 id=\"销毁阶段\"><a href=\"#销毁阶段\" class=\"headerlink\" title=\"销毁阶段\"></a>销毁阶段</h2><h4 id=\"1-componentWillUnmount\"><a href=\"#1-componentWillUnmount\" class=\"headerlink\" title=\"1. componentWillUnmount()\"></a>1. componentWillUnmount()</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">组件被销毁时触发。这里我们可以进行一些清理操作，例如清理定时器，取消Redux的订阅事件等等。</span><br></pre></td></tr></table></figure>\n","prev":{"title":"如何理解函数式编程","slug":"functionalPrograming"},"next":{"title":"shadowsocks","slug":"shadowsocks"},"link":"https://rexken.github.io/post/reactLearn/","toc":[{"title":"React组件生命周期","id":"React组件生命周期","index":"1","children":[{"title":"初始化阶段","id":"初始化阶段","index":"1.1"},{"title":"运行中阶段","id":"运行中阶段","index":"1.2"},{"title":"销毁阶段","id":"销毁阶段","index":"1.3"}]}]}