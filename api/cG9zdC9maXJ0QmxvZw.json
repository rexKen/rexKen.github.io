{"title":"angularJS的$compile","date":"2019-01-22T09:39:21.000Z","slug":"firtBlog","tags":["angularJS"],"categories":["program"],"updated":"2019-01-24T03:59:17.000Z","content":"<h1 id=\"AngularJS的-compile函数使用\"><a href=\"#AngularJS的-compile函数使用\" class=\"headerlink\" title=\"AngularJS的$compile函数使用\"></a>AngularJS的$compile函数使用</h1><p>情景：</p>\n<p>​    在使用angualrJS的时候，有时候遇到在原生js中使用angularJS的contoller下的$scope的参数或者函数。有时还会用原生JS往页面中动态添加需要使用的dom，往往这些dom都不会被angualrJS编译在scope作用域中，使得这些动态的dom上关于ng-click,ng-class等angularJS相关标签无效。</p>\n<p>思路和方法：</p>\n<p>​    首先引入了angularJS后通过原生js可以使用其作用域中的变量和方法属性选择器中ngCtrl是controller名。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> appElement = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'[ng-controller=ngCtrl]'</span>);</span><br><span class=\"line\"><span class=\"comment\">//获取$scope变量</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> $scope = angular.element(appElement).scope();</span><br></pre></td></tr></table></figure>\n<p>​    在用到$compile之前，我们在使用angularJS的时候有时会通过JS往文档中加入dom，比如在body中加入一个带有ng-click点击事件的dom</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> bodyContainer = <span class=\"built_in\">document</span>.getElementsByTagsName(<span class=\"string\">'body'</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> html = <span class=\"string\">`&lt;div ng-click=\"showName()\"&gt;23333&lt;/div&gt;`</span>;</span><br><span class=\"line\">bodyContainer.appendChild(html);</span><br></pre></td></tr></table></figure>\n<p>​    经过运行我们会发现 ，这样的实现的代码，ng-click()事件是没有绑定。因为这样生成的dom并没有经过angularJS的编译，所以我们要使用$compile来手动地将我们动态生成的dom与angualrJS的$scope绑定。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> bodyContainer = <span class=\"built_in\">document</span>.getElementsByTagsName(<span class=\"string\">'body'</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> html = <span class=\"string\">`&lt;div ng-click=\"showName()\"&gt;23333&lt;/div&gt;`</span>;                     </span><br><span class=\"line\"><span class=\"keyword\">let</span> compileDom= $compile(html)($scope);</span><br><span class=\"line\">bodyContainer.appendChild(compileDom);</span><br><span class=\"line\">$scope.$digest();</span><br></pre></td></tr></table></figure>\n<p>​    我们也可以将complileDom打印出来可发现compile的内容是经过angularJS编译的dom。</p>\n","prev":{"title":"shadowsocks","slug":"shadowsocks"},"next":{"title":"Hello World","slug":"hello-world"},"link":"https://rexken.github.io/post/firtBlog/","toc":[{"title":"AngularJS的$compile函数使用","id":"AngularJS的-compile函数使用","index":"1"}]}